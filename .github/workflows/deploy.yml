name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # --- 1. 준비 단계 ---
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # --- 2. 빌드 단계 ---
      - name: Build with Gradle using bootJar
        run: ./gradlew bootJar

      # --- 3. 배포 단계 (역할 분리!) ---
      # ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼ 1. 배송은 '배송 트럭(scp-action)'에게만 맡깁니다. ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
      - name: Transfer files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          # 보낼 물건 목록: .jar 파일과 dags 폴더
          source: "build/libs/*.jar,dags/"
          target: "/home/ubuntu/deploy_temp" # 임시 폴더에 안전하게 배송
      
      # ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼ 2. 실행은 '원격 조종 로봇(ssh-action)'에게만 맡깁니다. ▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
      - name: Execute commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 1. 기존 앱 중지
            pgrep java | xargs kill -9 || true
            
            # 2. 기존 폴더 정리
            rm -rf /home/ubuntu/app/*
            rm -rf /home/ubuntu/airflow/dags/*
            
            # 3. 임시 폴더에서 실제 위치로 파일 이동
            mv /home/ubuntu/deploy_temp/*.jar /home/ubuntu/app/
            mv /home/ubuntu/deploy_temp/dags/* /home/ubuntu/airflow/dags/
            
            # 4. 새 애플리케이션 실행
            cd /home/ubuntu/app
            nohup java -Dspring.datasource.password=${{ secrets.DB_PASSWORD }} -jar traffic-prediction-*.jar > application.log 2>&1 &