name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle using bootJar
        run: ./gradlew bootJar

      - name: DEBUG - List files in build/libs
        run: ls -l build/libs/

      # appleboy/scp-action 대신, scp 명령어를 직접 실행하여 상세한 로그를 확인합니다.
      - name: Manual SCP Transfer
        run: |
          # 1. GitHub Secret에 저장된 EC2 비밀키를 임시 파일로 저장합니다.
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          
          # 2. 비밀키 파일에 올바른 권한(600)을 부여합니다.
          chmod 600 private_key.pem
          
          # 3. scp 명령어를 실행합니다.
          #    -v : verbose 모드. 접속 및 전송의 모든 과정을 상세하게 출력합니다. (가장 중요!)
          #    -o StrictHostKeyChecking=no : 처음 접속하는 서버에 대한 경고를 무시합니다.
          #    -i private_key.pem : 이 비밀키를 사용하여 접속합니다.
          scp -v -o StrictHostKeyChecking=no -i private_key.pem build/libs/*.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/app/

      - name: Execute SSH commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          scp:
            # 1. 기존의 .jar 파일 배송 규칙은 그대로 둡니다.
            - source: "build/libs/*.jar"
              target: "/home/ubuntu/app"
            # 2. dags 폴더를 통째로 배송하는 새로운 규칙을 추가합니다!
            - source: "dags/"
              target: "/home/ubuntu/airflow"
          script: |
            pgrep java | xargs kill -9 || true
            cd /home/ubuntu/app
            # -Dspring.datasource.password=... : DB 비밀번호를 프로그램 실행 시 안전하게 전달
            nohup java -Dspring.datasource.password=${{ secrets.DB_PASSWORD }} -jar traffic-prediction-*.jar > application.log 2>&1 &